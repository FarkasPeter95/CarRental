//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRental.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRentalService")]
    public interface IRentalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/AddClient", ReplyAction="http://tempuri.org/IRentalService/AddClientResponse")]
        int AddClient(CarRentalServices.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/AddClient", ReplyAction="http://tempuri.org/IRentalService/AddClientResponse")]
        System.Threading.Tasks.Task<int> AddClientAsync(CarRentalServices.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateClient", ReplyAction="http://tempuri.org/IRentalService/UpdateClientResponse")]
        int UpdateClient(CarRentalServices.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateClient", ReplyAction="http://tempuri.org/IRentalService/UpdateClientResponse")]
        System.Threading.Tasks.Task<int> UpdateClientAsync(CarRentalServices.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/DeleteClient", ReplyAction="http://tempuri.org/IRentalService/DeleteClientResponse")]
        int DeleteClient(CarRentalServices.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/DeleteClient", ReplyAction="http://tempuri.org/IRentalService/DeleteClientResponse")]
        System.Threading.Tasks.Task<int> DeleteClientAsync(CarRentalServices.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetAllClients", ReplyAction="http://tempuri.org/IRentalService/GetAllClientsResponse")]
        CarRentalServices.Client[] GetAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetAllClients", ReplyAction="http://tempuri.org/IRentalService/GetAllClientsResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Client[]> GetAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchClientById", ReplyAction="http://tempuri.org/IRentalService/SearchClientByIdResponse")]
        CarRentalServices.Client SearchClientById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchClientById", ReplyAction="http://tempuri.org/IRentalService/SearchClientByIdResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Client> SearchClientByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchClient", ReplyAction="http://tempuri.org/IRentalService/SearchClientResponse")]
        CarRentalServices.Client[] SearchClient(string column, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchClient", ReplyAction="http://tempuri.org/IRentalService/SearchClientResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Client[]> SearchClientAsync(string column, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/AddCar", ReplyAction="http://tempuri.org/IRentalService/AddCarResponse")]
        int AddCar(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/AddCar", ReplyAction="http://tempuri.org/IRentalService/AddCarResponse")]
        System.Threading.Tasks.Task<int> AddCarAsync(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateCar", ReplyAction="http://tempuri.org/IRentalService/UpdateCarResponse")]
        int UpdateCar(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateCar", ReplyAction="http://tempuri.org/IRentalService/UpdateCarResponse")]
        System.Threading.Tasks.Task<int> UpdateCarAsync(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/DeleteCar", ReplyAction="http://tempuri.org/IRentalService/DeleteCarResponse")]
        int DeleteCar(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/DeleteCar", ReplyAction="http://tempuri.org/IRentalService/DeleteCarResponse")]
        System.Threading.Tasks.Task<int> DeleteCarAsync(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateCarImage", ReplyAction="http://tempuri.org/IRentalService/UpdateCarImageResponse")]
        int UpdateCarImage(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateCarImage", ReplyAction="http://tempuri.org/IRentalService/UpdateCarImageResponse")]
        System.Threading.Tasks.Task<int> UpdateCarImageAsync(CarRentalServices.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetAllCars", ReplyAction="http://tempuri.org/IRentalService/GetAllCarsResponse")]
        CarRentalServices.Car[] GetAllCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetAllCars", ReplyAction="http://tempuri.org/IRentalService/GetAllCarsResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Car[]> GetAllCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchCar", ReplyAction="http://tempuri.org/IRentalService/SearchCarResponse")]
        CarRentalServices.Car[] SearchCar(string column, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchCar", ReplyAction="http://tempuri.org/IRentalService/SearchCarResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Car[]> SearchCarAsync(string column, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchCarById", ReplyAction="http://tempuri.org/IRentalService/SearchCarByIdResponse")]
        CarRentalServices.Car SearchCarById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/SearchCarById", ReplyAction="http://tempuri.org/IRentalService/SearchCarByIdResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Car> SearchCarByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/NextCarId", ReplyAction="http://tempuri.org/IRentalService/NextCarIdResponse")]
        int NextCarId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/NextCarId", ReplyAction="http://tempuri.org/IRentalService/NextCarIdResponse")]
        System.Threading.Tasks.Task<int> NextCarIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetAllRentals", ReplyAction="http://tempuri.org/IRentalService/GetAllRentalsResponse")]
        CarRentalServices.Rental[] GetAllRentals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetAllRentals", ReplyAction="http://tempuri.org/IRentalService/GetAllRentalsResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Rental[]> GetAllRentalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/AddRental", ReplyAction="http://tempuri.org/IRentalService/AddRentalResponse")]
        int AddRental(CarRentalServices.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/AddRental", ReplyAction="http://tempuri.org/IRentalService/AddRentalResponse")]
        System.Threading.Tasks.Task<int> AddRentalAsync(CarRentalServices.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetRentalById", ReplyAction="http://tempuri.org/IRentalService/GetRentalByIdResponse")]
        CarRentalServices.Rental GetRentalById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetRentalById", ReplyAction="http://tempuri.org/IRentalService/GetRentalByIdResponse")]
        System.Threading.Tasks.Task<CarRentalServices.Rental> GetRentalByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/NextRentalId", ReplyAction="http://tempuri.org/IRentalService/NextRentalIdResponse")]
        int NextRentalId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/NextRentalId", ReplyAction="http://tempuri.org/IRentalService/NextRentalIdResponse")]
        System.Threading.Tasks.Task<int> NextRentalIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateRental", ReplyAction="http://tempuri.org/IRentalService/UpdateRentalResponse")]
        int UpdateRental(CarRentalServices.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/UpdateRental", ReplyAction="http://tempuri.org/IRentalService/UpdateRentalResponse")]
        System.Threading.Tasks.Task<int> UpdateRentalAsync(CarRentalServices.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/CloseRental", ReplyAction="http://tempuri.org/IRentalService/CloseRentalResponse")]
        int CloseRental(CarRentalServices.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/CloseRental", ReplyAction="http://tempuri.org/IRentalService/CloseRentalResponse")]
        System.Threading.Tasks.Task<int> CloseRentalAsync(CarRentalServices.Rental rental);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/Login", ReplyAction="http://tempuri.org/IRentalService/LoginResponse")]
        int Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/Login", ReplyAction="http://tempuri.org/IRentalService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetUserByeUserName", ReplyAction="http://tempuri.org/IRentalService/GetUserByeUserNameResponse")]
        CarRentalServices.User GetUserByeUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetUserByeUserName", ReplyAction="http://tempuri.org/IRentalService/GetUserByeUserNameResponse")]
        System.Threading.Tasks.Task<CarRentalServices.User> GetUserByeUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetReportData", ReplyAction="http://tempuri.org/IRentalService/GetReportDataResponse")]
        CarRentalSevices.RentalData GetReportData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentalService/GetReportData", ReplyAction="http://tempuri.org/IRentalService/GetReportDataResponse")]
        System.Threading.Tasks.Task<CarRentalSevices.RentalData> GetReportDataAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentalServiceChannel : CarRental.ServiceReference1.IRentalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentalServiceClient : System.ServiceModel.ClientBase<CarRental.ServiceReference1.IRentalService>, CarRental.ServiceReference1.IRentalService {
        
        public RentalServiceClient() {
        }
        
        public RentalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddClient(CarRentalServices.Client client) {
            return base.Channel.AddClient(client);
        }
        
        public System.Threading.Tasks.Task<int> AddClientAsync(CarRentalServices.Client client) {
            return base.Channel.AddClientAsync(client);
        }
        
        public int UpdateClient(CarRentalServices.Client client) {
            return base.Channel.UpdateClient(client);
        }
        
        public System.Threading.Tasks.Task<int> UpdateClientAsync(CarRentalServices.Client client) {
            return base.Channel.UpdateClientAsync(client);
        }
        
        public int DeleteClient(CarRentalServices.Client client) {
            return base.Channel.DeleteClient(client);
        }
        
        public System.Threading.Tasks.Task<int> DeleteClientAsync(CarRentalServices.Client client) {
            return base.Channel.DeleteClientAsync(client);
        }
        
        public CarRentalServices.Client[] GetAllClients() {
            return base.Channel.GetAllClients();
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Client[]> GetAllClientsAsync() {
            return base.Channel.GetAllClientsAsync();
        }
        
        public CarRentalServices.Client SearchClientById(int id) {
            return base.Channel.SearchClientById(id);
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Client> SearchClientByIdAsync(int id) {
            return base.Channel.SearchClientByIdAsync(id);
        }
        
        public CarRentalServices.Client[] SearchClient(string column, string value) {
            return base.Channel.SearchClient(column, value);
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Client[]> SearchClientAsync(string column, string value) {
            return base.Channel.SearchClientAsync(column, value);
        }
        
        public int AddCar(CarRentalServices.Car car) {
            return base.Channel.AddCar(car);
        }
        
        public System.Threading.Tasks.Task<int> AddCarAsync(CarRentalServices.Car car) {
            return base.Channel.AddCarAsync(car);
        }
        
        public int UpdateCar(CarRentalServices.Car car) {
            return base.Channel.UpdateCar(car);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCarAsync(CarRentalServices.Car car) {
            return base.Channel.UpdateCarAsync(car);
        }
        
        public int DeleteCar(CarRentalServices.Car car) {
            return base.Channel.DeleteCar(car);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCarAsync(CarRentalServices.Car car) {
            return base.Channel.DeleteCarAsync(car);
        }
        
        public int UpdateCarImage(CarRentalServices.Car car) {
            return base.Channel.UpdateCarImage(car);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCarImageAsync(CarRentalServices.Car car) {
            return base.Channel.UpdateCarImageAsync(car);
        }
        
        public CarRentalServices.Car[] GetAllCars() {
            return base.Channel.GetAllCars();
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Car[]> GetAllCarsAsync() {
            return base.Channel.GetAllCarsAsync();
        }
        
        public CarRentalServices.Car[] SearchCar(string column, string value) {
            return base.Channel.SearchCar(column, value);
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Car[]> SearchCarAsync(string column, string value) {
            return base.Channel.SearchCarAsync(column, value);
        }
        
        public CarRentalServices.Car SearchCarById(int id) {
            return base.Channel.SearchCarById(id);
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Car> SearchCarByIdAsync(int id) {
            return base.Channel.SearchCarByIdAsync(id);
        }
        
        public int NextCarId() {
            return base.Channel.NextCarId();
        }
        
        public System.Threading.Tasks.Task<int> NextCarIdAsync() {
            return base.Channel.NextCarIdAsync();
        }
        
        public CarRentalServices.Rental[] GetAllRentals() {
            return base.Channel.GetAllRentals();
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Rental[]> GetAllRentalsAsync() {
            return base.Channel.GetAllRentalsAsync();
        }
        
        public int AddRental(CarRentalServices.Rental rental) {
            return base.Channel.AddRental(rental);
        }
        
        public System.Threading.Tasks.Task<int> AddRentalAsync(CarRentalServices.Rental rental) {
            return base.Channel.AddRentalAsync(rental);
        }
        
        public CarRentalServices.Rental GetRentalById(int id) {
            return base.Channel.GetRentalById(id);
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.Rental> GetRentalByIdAsync(int id) {
            return base.Channel.GetRentalByIdAsync(id);
        }
        
        public int NextRentalId() {
            return base.Channel.NextRentalId();
        }
        
        public System.Threading.Tasks.Task<int> NextRentalIdAsync() {
            return base.Channel.NextRentalIdAsync();
        }
        
        public int UpdateRental(CarRentalServices.Rental rental) {
            return base.Channel.UpdateRental(rental);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRentalAsync(CarRentalServices.Rental rental) {
            return base.Channel.UpdateRentalAsync(rental);
        }
        
        public int CloseRental(CarRentalServices.Rental rental) {
            return base.Channel.CloseRental(rental);
        }
        
        public System.Threading.Tasks.Task<int> CloseRentalAsync(CarRentalServices.Rental rental) {
            return base.Channel.CloseRentalAsync(rental);
        }
        
        public int Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public CarRentalServices.User GetUserByeUserName(string userName) {
            return base.Channel.GetUserByeUserName(userName);
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.User> GetUserByeUserNameAsync(string userName) {
            return base.Channel.GetUserByeUserNameAsync(userName);
        }
        
        public CarRentalSevices.RentalData GetReportData(int id) {
            return base.Channel.GetReportData(id);
        }
        
        public System.Threading.Tasks.Task<CarRentalSevices.RentalData> GetReportDataAsync(int id) {
            return base.Channel.GetReportDataAsync(id);
        }
    }
}
